{"version":3,"sources":["stolen-party-stuff/party.js","stolen-party-stuff/greyscale.js","util/HackyFileShit.js","util/ColorPaletteUtil.js","components/Partyifier.js","components/Uploadinator.js","components/ColorPalette.js","components/ColorPicker.js","util/PredefinedColorPalettes.js","components/Controlinator.js","App.js","serviceWorker.js","index.js"],"names":["createPartyImage","inputFile","outputStream","colors","processImage","a","err","pixels","console","log","shape","greyscale","toGreyscale","isGif","length","shapeWidth","shapeHeight","howManyFrames","gif","gifEncoder","getPixelValue","arr","x","y","frameIndex","pipe","setDelay","speed","setRepeat","setTransparent","writeHeader","on","read","addTheColours","frame","colourList","g","push","addFrame","flushData","colourIndex","finish","Promise","resolve","reader","FileReader","onloadend","buffer","Buffer","from","result","getPixels","type","readAsArrayBuffer","i","data","idx","avg","fileToImgTag","file","size","src","URL","createObjectURL","width","height","alt","jamBitsIntoGifFile","bits","file_name","File","partifiedBytes","Uint8Array","doTheHackyWritingBytesManuallyThing","someBytes","buf1","buf2","tmp","byteLength","set","appendBuffers","theMagic","input","hackyStream","Stream","Writable","write","path","replace","ColorObjPlease","RGBColors","map","color","rgb","r","b","hex","componentToHex","RGBArrayPlease","ColorObjs","c","toString","StyledPartyJammingSpace","styled","div","isMobile","StyledPartyOverlay","props","colours","join","isPartying","StyledDoItButton","button","StyledDownloadButton","doTheThing","image","setPartyFile","setGettingReadyToParty","config","partyMagic","setTimeout","Partyifier","maybePartyFile","useState","fileToParty","setFileToParty","partyFile","gettingReadyToParty","partyToDisplay","doItButton","downloadButton","onClick","then","_","disabled","document","createElement","href","download","name","body","appendChild","click","removeChild","gtag","Container","StyledUploadIcon","Upload","attrs","StyledBrowserView","BrowserView","Uploadinator","jamImageOnPage","onDrop","useCallback","files","imageToParty","useDropzone","accept","maxSize","multiple","getRootProps","getInputProps","isDragActive","StyledColorPalette","selected","ColorPalette","style","colorList","PickerWrapper","Color","StyledSketchPicker","SketchPicker","BrushColor","Brush","EmptyColor","handleColorChange","onChange","ColorPicker","rows","columns","selectedIndex","palette","selectedIdx","onSelect","j","key","SetupColorSwatches","colorRow","rowidx","PartyPartyParty","StyledRowWrapper","PredefinedPalettes","partyPalette","noPartyPalette","StyledSlider","ReactSlider","StyledThumb","Thumb","state","valueNow","StyledTrack","index","Track","Controlinator","setConfig","trigger","min","defaultValue","renderTrack","renderThumb","onAfterChange","val","StyledAppWrapper","StyledColumnWrapper","App","theParty","setTheParty","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2459acd2.chunk.js","sourcesContent":["import getPixels from 'get-pixels'\nimport gifEncoder from 'gif-encoder'\nimport { toGreyscale } from './greyscale'\n\n/**\n * Writes a party version of the given input image to the specified output stream.\n * @param {string} inputFile the thing to be partyified\n * @param {stream.Writable} outputStream The stream where the partified image is to be written\n */\nexport async function createPartyImage(inputFile, outputStream, colors, speed = 100) {\n\n  function processImage(err, pixels) {\n    if (err) {\n      console.log(\"Invalid image path..\");\n      console.log(err);\n      return;\n    }\n\n    const {shape} = pixels;\n    const greyscale = toGreyscale(pixels);\n    const isGif = shape.length > 3\n    const shapeWidth = shape[isGif ? 1 : 0]\n    const shapeHeight = shape[isGif ? 2 : 1]\n    const howManyFrames = isGif ? shape[0] : 1\n\n    // Get pixels returns a 4d array for gifs\n    const gif = new gifEncoder(shapeWidth, shapeHeight);\n\n    gif.pipe(outputStream);\n\n    gif.setDelay(speed);\n    gif.setRepeat(0);\n    gif.setTransparent(\"0x00FF00\");\n    gif.writeHeader();\n    gif.on(\"readable\", function () {\n      gif.read();\n    });\n\n    function getPixelValue(arr, x, y, frameIndex) {\n      if (x < 0 || x >= (frameIndex + 1) * shapeWidth || y < 0 || y >= (frameIndex + 1) * shapeHeight) {\n        return -1;\n      }\n\n      return arr[x + y * shapeWidth];\n    }\n\n    const addTheColours = (greyscale, frame, frameIndex, colourList) => {\n      for (let y = frameIndex * shapeHeight; y < (frameIndex + 1) * shapeHeight; y += 1) {\n        for (let x = 0; x < shapeWidth; x += 1) {\n          let g = getPixelValue(greyscale, x, y, frameIndex);\n          if (g === -1) {\n            frame.push(0);\n            frame.push(255);\n            frame.push(0);\n            frame.push(0);\n          } else {\n            g = g < 32 ? 32 : g;\n            frame.push(g * colourList[0] / 255)\n            frame.push(g * colourList[1] / 255)\n            frame.push(g * colourList[2] / 255)\n            frame.push(255)\n          }\n        }\n      }\n    }\n\n    for (var frameIndex = 0; frameIndex < howManyFrames; frameIndex += 1) {\n      let frame = []\n\n      if (howManyFrames > 1) {\n        const coloursList = colors[frameIndex % colors.length]\n        addTheColours(greyscale, frame, frameIndex, coloursList)\n        gif.addFrame(frame)\n        gif.flushData()\n      } else {\n        for(var colourIndex = 0; colourIndex < colors.length; colourIndex += 1) {\n          addTheColours(greyscale, frame, frameIndex, colors[colourIndex])\n          gif.addFrame(frame)\n          gif.flushData()\n          frame = []\n        }\n      }\n    }\n\n    gif.finish();\n  }\n\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.onloadend = () => {\n      let buffer = Buffer.from(reader.result)\n\n      getPixels(buffer, inputFile.type, (err, pixels) => {\n        processImage(err, pixels)\n        console.log('done')\n        resolve()\n      })\n    }\n\n    reader.readAsArrayBuffer(inputFile)\n  })\n}\n","export function toGreyscale(pixels) {\n  const greyscale = [];\n\n  for (var i = 0; i < pixels.data.length / 4; i += 1) {\n    const idx = i * 4;\n    if (pixels.data[idx + 3] < 64) {\n      greyscale.push(-1);\n    } else {\n      const avg =\n        (pixels.data[idx] +\n          pixels.data[idx + 1] +\n          pixels.data[idx + 2]) /\n        3;\n      greyscale.push(avg);\n    }\n  }\n  return greyscale;\n}\n","import React from 'react'\nimport Stream from 'stream-browserify'\nimport {createPartyImage} from '../stolen-party-stuff/party'\n\nexport const fileToImgTag = (file, size) => {\n  return <img src={URL.createObjectURL(file)} width={size} height={size} alt='just do the thing already'/>\n}\n\nconst jamBitsIntoGifFile = (bits, file_name) => {\n  return new File([bits], `${file_name}.gif`, {type: 'image/gif'})\n}\n\nconst appendBuffers = (buf1, buf2) => {\n  let tmp = new Uint8Array(buf1.byteLength + buf2.byteLength)\n  tmp.set(new Uint8Array(buf1), 0)\n  tmp.set(new Uint8Array(buf2), buf1.byteLength)\n  return tmp.buffer\n}\n\nlet partifiedBytes = new Uint8Array(0)\nconst doTheHackyWritingBytesManuallyThing = someBytes => {\n  partifiedBytes = appendBuffers(partifiedBytes, someBytes)\n}\n\nexport const theMagic = async (input, colors, speed) => {\n  partifiedBytes = new Uint8Array(0)\n  let hackyStream = new Stream.Writable()\n  hackyStream.write = doTheHackyWritingBytesManuallyThing\n  await createPartyImage(input, hackyStream, colors, speed)\n  console.log(`partifiedBytes: ${partifiedBytes}`)\n\n  const file_name = input.path.replace(/\\.(png|jpeg|gif)/, '').replace(/^/, `party-`)\n\n  return jamBitsIntoGifFile(partifiedBytes, file_name)\n}","export const ColorObjPlease = (RGBColors) => {\n  return RGBColors.map(color => ({ rgb: { r: color[0], g: color[1], b: color[2], a: 1}, hex: rgbToHex(color[0], color[1], color[2])}))\n}\n\nexport const RGBArrayPlease = (ColorObjs) => {\n  return ColorObjs.map(color => [color.rgb.r,color.rgb.g,color.rgb.b])\n}\n\n// Being a professional developer just means knowing what you need to copy from stack overflow\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { fileToImgTag, theMagic } from '../util/HackyFileShit'\nimport { isMobile } from 'react-device-detect'\nimport { RGBArrayPlease } from '../util/ColorPaletteUtil'\n\nconst StyledPartyJammingSpace = styled.div`\n  height: ${isMobile ? '36vh' : '100px'};\n  width: ${isMobile ? '90vw' : '100px'};\n  background: #ababab;\n  text-justify: auto;\n  text-align: center;\n  padding: ${isMobile ? '2vh' : '20px'};\n  border-radius: 10px;\n  margin-top: ${isMobile ? '5vh' : '80px'};\n`\n\nconst alpha = 0.7\nconst StyledPartyOverlay = styled.div`\n  @keyframes party {\n      0%{ background-color: rgba(${props => props.colours[0].join()}, ${alpha}); }\n     11%{ background-color: rgba(${props => props.colours[1].join()}, ${alpha}); }\n     22%{ background-color: rgba(${props => props.colours[2].join()}, ${alpha}); }\n     33%{ background-color: rgba(${props => props.colours[3].join()}, ${alpha}); }\n     44%{ background-color: rgba(${props => props.colours[4].join()}, ${alpha}); }\n     55%{ background-color: rgba(${props => props.colours[5].join()}, ${alpha}); }\n     66%{ background-color: rgba(${props => props.colours[6].join()}, ${alpha}); }\n     77%{ background-color: rgba(${props => props.colours[7].join()}, ${alpha}); }\n     88%{ background-color: rgba(${props => props.colours[8].join()}, ${alpha}); }\n    100%{ background-color: rgba(${props => props.colours[9].join()}, ${alpha}); }\n  }\n  \n  filter: brightness(85%);\n  opacity: ${props => props.isPartying ? '1' : '0'};\n  animation: party ${props => 0.75 * props.speed/100}s infinite;\n  transition: opacity 2s ease-out;\n  height: ${isMobile ? '36vh' : '100px'};\n  width: ${isMobile ? '90vw' : '100px'};\n  padding: ${isMobile ? '2vh' : '20px'};\n  border-radius: 10px;\n  margin-top: ${isMobile ? '-40vh' : '-140px'};\n  z-index: 200001;\n`\n\nconst StyledDoItButton = styled.button`\n  margin-top: 10px;\n  width: 100px;\n`\n\nconst StyledDownloadButton = styled.button`\n  width: 100px;\n`\n\nconst doTheThing = async (image, setPartyFile, setGettingReadyToParty, config) => {\n  if (image !== null) {\n    setGettingReadyToParty(true)\n    const partyMagic = await theMagic(image, RGBArrayPlease(config.colors), config.speed)\n    return new Promise(resolve => setTimeout(() => { setPartyFile(partyMagic); resolve() }, 3000))\n  }\n}\n\nconst download = file => {\n  let a = document.createElement('a')\n  a.href = URL.createObjectURL(file)\n  a.download = file.name\n  document.body.appendChild(a)\n  a.click()\n  document.body.removeChild(a)\n  // eslint-disable-next-line no-undef\n  gtag('event', 'file_stuff', { 'event_category': 'file_download', 'event_label': file.name })\n}\n\nconst Partyifier = ({ maybePartyFile, config }) => {\n  const [fileToParty, setFileToParty] = useState(null)\n  const [partyFile, setPartyFile] = useState(null)\n  const [gettingReadyToParty, setGettingReadyToParty] = useState(false)\n\n  let partyToDisplay = maybePartyFile\n  let doItButton = null\n  let downloadButton = null\n  if (maybePartyFile instanceof File) {\n    if (maybePartyFile !== fileToParty) {\n      setFileToParty(maybePartyFile)\n      setPartyFile(null)\n    }\n    // for some reason on first render we loop through this code once before the setState call works?? help me @tim.huddle\n    if (fileToParty !== null) {\n      partyToDisplay = fileToImgTag(fileToParty, isMobile ? 300 : 100)\n      doItButton = <StyledDoItButton onClick={() => doTheThing(fileToParty, setPartyFile, setGettingReadyToParty, config).then(_ => setGettingReadyToParty(false))} disabled={gettingReadyToParty}>{gettingReadyToParty ? 'just chillll' : 'do it'}</StyledDoItButton>\n    }\n  }\n\n  if (partyFile instanceof File) {\n    partyToDisplay = fileToImgTag(partyFile, isMobile ? 300 : 100)\n    doItButton = <StyledDoItButton onClick={() => {setPartyFile(null); setGettingReadyToParty(false)}}>reset</StyledDoItButton>\n    downloadButton = <StyledDownloadButton onClick={() => download(partyFile)}>download</StyledDownloadButton>\n  }\n\n  return (\n    <>\n      {partyToDisplay &&\n        <>\n          <StyledPartyJammingSpace isPartying={gettingReadyToParty}>\n            {partyToDisplay}\n          </StyledPartyJammingSpace>\n          <StyledPartyOverlay isPartying={gettingReadyToParty} colours={RGBArrayPlease(config.colors)} speed={config.speed} />\n          {doItButton}\n          {downloadButton}\n        </>\n      }\n    </>\n  )\n}\n\nexport default Partyifier\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport styled from 'styled-components'\nimport { Upload } from '@styled-icons/feather/Upload'\nimport { BrowserView, isMobile } from 'react-device-detect'\n\nconst Container = styled.div`\n  height: ${isMobile ? '20vh' : '100px'};\n  width: ${isMobile ? '95vw' : '400px'};\n  background: #ababab;\n  text-justify: auto;\n  text-align: center;\n  padding-top: ${isMobile ? '5vh' : '20px'};\n  border-radius: 10px;\n  margin-top: ${isMobile ? '2vh' : '80px'};\n  font-size: ${isMobile ? '24px' : ''};\n`\n\nconst StyledUploadIcon = styled(Upload).attrs(props => ({\n  ...props,\n  size: isMobile ? 72 : 24\n}))`\n  margin-top: 15px;\n`\n\nconst StyledBrowserView = styled(BrowserView)`\n  display: inline;\n`\n\nlet Uploadinator = ({ jamImageOnPage }) => {\n  const onDrop = useCallback(files => {\n    let imageToParty = <p>whoa, I can't party that</p>\n    // using react-dropzone's validation for file type and size means if we get a single file it *should* be partiable\n    if (files.length === 1) {\n      imageToParty = files[0]\n      // eslint-disable-next-line no-undef\n      gtag('event', 'file_stuff', { 'event_category': 'file_upload', 'event_label': files[0].path })\n    }\n    jamImageOnPage(imageToParty)\n  }, [jamImageOnPage])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, accept: 'image/jpeg, image/png, image/gif', maxSize: 1024000, multiple: false})\n\n  return (\n    <Container {...getRootProps()}>\n      <input {...getInputProps()} />\n      {\n        isDragActive ?\n          <div>Get the party started...</div> :\n          <div><StyledBrowserView>Drag and drop or </StyledBrowserView>click here to get the party started...</div>\n      }\n      <StyledUploadIcon/>\n    </Container>\n  )\n}\n\nexport default Uploadinator\n","import React  from 'react'\nimport styled from 'styled-components'\nimport { Palette } from '@styled-icons/material-outlined/Palette'\n\n\nconst StyledColorPalette = styled.div`\n  width: 50px;\n  height: 50px;\n  display:block;\n  background-image: linear-gradient(to right, ${props => props.colors});\n  border-style: solid;\n  border-width: 1px;\n  border-color: ${props => props.selected ? 'red' : 'black'}\n  cursor: pointer;\n  border-radius: 5px;\n  `\n\nconst ColorPalette = ({ colors, onClick, style }) => {\n  let colorList = colors.map(color => color.hex)\n  colorList = colorList.join(',')\n\n  return (\n    <StyledColorPalette colors={colorList} onClick={onClick} style={style}><Palette /></StyledColorPalette>\n  )\n}\n\nexport default ColorPalette","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { SketchPicker } from 'react-color'\nimport { Brush } from '@styled-icons/material/Brush'\n\nconst PickerWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n`\n\nconst Color = styled.div`\n  width: 25px;\n  height: 25px;\n  display:block;\n  background-color: ${props => props.color? 'rgb(' + props.color.rgb.r + ',' + props.color.rgb.g + ',' + props.color.rgb.b + ')' : '#fff'};\n  border-style: solid;\n  border-width: 1px;\n  border-color: ${props => props.selected ? 'red' : 'black'}\n  cursor: pointer;\n  border-radius: 2px;\n`\n\nconst StyledSketchPicker = styled(SketchPicker)`\n  display: block;\n`\n\nconst BrushColor = styled(Brush)`\n  color: ${props => props.color.rgb.r + props.color.rgb.g + props.color.rgb.b > 525 ? '#000': '#fff'}\n`\n\nconst EmptyColor = () => {\n  return (<Color><Brush /></Color>)\n}\n\nconst SetupColorSwatches = (colors, rows, columns, selectedIdx, onSelect) => {\n  const palette = []\n  for(var i = 0; i < rows; i++){\n    palette[i] = []\n    for(var j = 0; j < columns; j++){\n      const idx = i*columns + j\n      const color = colors[idx]\n      const key = 'rowcolumn' + idx\n      palette[i][j] = idx < colors.length ? <Color key={key} color={color} onClick={() => selectedIdx !== idx ? onSelect(idx) : onSelect(-1)} selected={selectedIdx === idx}><BrushColor color={color} /></Color> : <EmptyColor key={key} />\n    }\n  }\n  return palette\n}\n\nconst handleColorChange = (idx, onChange) => (color) => {\n  onChange(config => { config.colors[idx] = color; return { ...config, colors: [...config.colors] }})\n}\n\nconst ColorPicker = ({ colors, rows, columns, onChange }) => {\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const palette = SetupColorSwatches(colors, rows, columns, selectedIndex, setSelectedIndex)\n\n  return (\n    <PickerWrapper>\n      <table>\n        <tbody>\n          {palette.map((colorRow, rowidx) => <tr key={'row'+rowidx}>\n            {colorRow.map((color, idx) =>\n              <td key={'td-'+idx}>\n                {color}\n              </td>\n            )}\n          </tr>)}\n        </tbody>\n      </table>\n      {selectedIndex !== -1 && <StyledSketchPicker color={colors[selectedIndex]} onChange={handleColorChange(selectedIndex, onChange)} />}\n    </PickerWrapper>\n  )\n}\n\nexport default ColorPicker\n","export const PartyPartyParty = [\n  [255, 141, 139],\n  [254, 214, 137],\n  [136, 255, 137],\n  [135, 255, 255],\n  [139, 181, 254],\n  [215, 140, 255],\n  [255, 140, 255],\n  [255, 104, 247],\n  [254, 108, 183],\n  [255, 105, 104]\n];\n\nexport const NoParty = [\n  [128, 128, 128],\n  [158, 158, 158],\n  [187, 187, 187],\n  [200, 200, 200],\n  [187, 187, 187],\n  [158, 158, 158],\n  [128, 128, 128],\n  [158, 158, 158],\n  [187, 187, 187],\n  [200, 200, 200],\n];\n","import React from 'react'\nimport ColorPalette from './ColorPalette'\nimport ColorPicker from './ColorPicker'\nimport styled from 'styled-components'\nimport { isMobile } from \"react-device-detect\"\nimport { ColorObjPlease } from '../util/ColorPaletteUtil'\nimport { NoParty, PartyPartyParty } from '../util/PredefinedColorPalettes'\nimport Collapsible from 'react-collapsible'\nimport { SlidersH } from '@styled-icons/fa-solid/SlidersH'\nimport ReactSlider from 'react-slider'\n\nconst StyledRowWrapper = styled.div`\n  width: ${isMobile ? '100%' : '50%'};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 10px;\n`\n\nconst PredefinedPalettes = {\n  partyPalette: ColorObjPlease(PartyPartyParty),\n  noPartyPalette: ColorObjPlease(NoParty)\n}\n\nconst StyledSlider = styled(ReactSlider)`\n    width: 100%;\n    height: 20px;\n`;\n\nconst StyledThumb = styled.div`\n    height: 20px;\n    line-height: 20px;\n    width: 25px;\n    text-align: center;\n    background-color: #000;\n    color: #cacaca;\n    border-radius: 15%;\n    cursor: grab;\n`;\n\nconst Thumb = (props, state) => <StyledThumb {...props}>{state.valueNow}</StyledThumb>;\n\nconst StyledTrack = styled.div`\n    top: 0;\n    bottom: 0;\n    background: ${props => props.index === 2 ? '#f00' : props.index === 1 ? '#555555' : '#aaaaaa'};\n    border-radius: 999px;\n`;\n\nconst Track = (props, state) => <StyledTrack {...props} index={state.index} />;\n\nconst Controlinator = ({ config, setConfig }) => {\n  return (\n    <Collapsible trigger={<SlidersH size={24} color={'#6a6a6a'} />}>\n      <StyledRowWrapper>\n        Speed:\n        <StyledSlider min={1} defaultValue={[50]} renderTrack={Track} renderThumb={Thumb} onAfterChange={val => setConfig({ ...config, speed: 100 * 50/val })} />\n      </StyledRowWrapper>\n      <StyledRowWrapper>\n        <ColorPalette colors={PredefinedPalettes.partyPalette} onClick={() => setConfig({ ...config, colors: [...PredefinedPalettes.partyPalette] })} style={{'marginRight': '10px'}} />\n        <ColorPalette colors={PredefinedPalettes.noPartyPalette} onClick={() => setConfig({ ...config, colors: [...PredefinedPalettes.noPartyPalette] })} />\n      </StyledRowWrapper>\n      <StyledRowWrapper>\n        <ColorPicker rows={1} columns={10} colors={config.colors} onChange={setConfig} />\n      </StyledRowWrapper>\n    </Collapsible>\n  )\n}\n\nexport default Controlinator\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Partyifier from './components/Partyifier'\nimport Uploadinator from './components/Uploadinator'\nimport Controlinator from './components/Controlinator'\nimport { isMobile } from 'react-device-detect'\nimport { PartyPartyParty } from './util/PredefinedColorPalettes'\nimport { ColorObjPlease } from './util/ColorPaletteUtil'\n\nconst StyledAppWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst StyledColumnWrapper = styled.div`\n  width: ${isMobile ? '100%' : '50%'};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst App = () => {\n  const [theParty, setTheParty] = useState(null)\n  const [config, setConfig] = useState({\n    speed: 100,\n    colors: [...ColorObjPlease(PartyPartyParty)]\n  })\n\n  const jamImageOnPage = image => { setTheParty(image) }\n\n  return (\n    <StyledAppWrapper>\n      <StyledColumnWrapper>\n        <Uploadinator jamImageOnPage={jamImageOnPage} />\n        <Partyifier maybePartyFile={theParty} config={config} />\n        {theParty && <Controlinator config={config} setConfig={setConfig} />}\n      </StyledColumnWrapper>\n    </StyledAppWrapper>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}